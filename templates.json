{
	"base" : "---\n- name: Automatically generated playbook\n\thosts: all\n",
	"tasks" : "\ttasks:\n",
	"handlers" : "\thandlers:\n",
	"apache_tasks" : "\t\t- name: Actualizar repositorios\n\t\t\tapt:\n\t\t\t\tupdate_cache: yes\n\t\t\t\tcache_valid_time: 3600\n\n\t\t- name: Instalar Apache\n\t\t\tapt:\n\t\t\t\tname: apache2\n\t\t\t\tinstall_recommends: yes\n\t\t\t\tstate: present\n\n\t\t- name: Cambiar document root\n\t\t\tlineinfile:\n\t\t\t\tdest: \"/etc/apache2/sites-available/000-default.conf\"\n\t\t\t\tregexp: \"/var/www/html\"\n\t\t\t\tline: \"{{ document_root }}\"\n\t\t\t\tstate: present\n\t\t\tnotify:\n\t\t\t\t- restart apache2\n\n\t\t- name: Cambiar nombre del servidor\n\t\t\tlineinfile:\n\t\t\t\tdest: \"/etc/apache2/sites-available/000-default.conf\"\n\t\t\t\tregexp: \"#ServerName www.example.com\"\n\t\t\t\tline: \"ServerName {{ server_name }}\"\n\t\t\t\tstate: present\n\t\t\tnotify:\n\t\t\t\t- restart apache2\n\n\n",
	"apache_handlers" : "\t\t- name: restart apache2\n\t\t\tservice:\n\t\t\t\tname: apache2\n\t\t\t\tstate: restarted\n\n",
	"nginx_tasks" : "\t\t- name: Actualizar repositorios\n\t\t\tapt:\n\t\t\t\tupdate_cache: yes\n\t\t\t\tcache_valid_time: 3600\n\n\t\t- name: Instalar Nginx\n\t\t\tapt:\n\t\t\t\tname: nginx\n\t\t\t\tinstall_recommends: yes\n\t\t\t\tstate: present\n\n\t\t- name: Cambiar document root\n\t\t\tlineinfile:\n\t\t\t\tdest: \"/etc/nginx/sites-available/default\"\n\t\t\t\tregexp: \"/var/www/html\"\n\t\t\t\tline: \"{{ document_root }}\"\n\t\t\t\tstate: present\n\t\t\tnotify:\n\t\t\t\t- restart nginx\n\n\t\t- name: Cambiar nombre del servidor\n\t\t\tlineinfile:\n\t\t\t\tdest: \"/etc/nginx/sites-available/default\"\n\t\t\t\tregexp: \"server_name _;\"\n\t\t\t\tline: \"server_name {{ server_name }};\"\n\t\t\t\tstate: present\n\t\t\tnotify:\n\t\t\t\t- restart nginx\n\n\n",
	"nginx_handlers" : "\t\t- name: restart nginx\n\t\t\tservice:\n\t\t\t\tname: nginx\n\t\t\t\tstate: restarted\n\n",
	"php_tasks" : "\t\t- name: Actualizar repositorios\n\t\t\tapt:\n\t\t\t\tupdate_cache: yes\n\t\t\t\tcache_valid_time: 3600\n\n\t\t- name: Instalar PHP\n\t\t\tapt: \n\t\t\t\tname: {{ '{{' }} items {{ '}}' }}\n\t\t\t\tstate: present\n\t\t\twith_items:\n\t\t\t\t- php{{ version }}\n\t\t\t\t- php{{ version }}-cli\n\t\t\t\t- php{{ version }}-common\n\n\n",
	"python_tasks" : "\t\t- name: Actualizar repositorios\n\t\t\tapt:\n\t\t\t\tupdate_cache: yes\n\t\t\t\tcache_valid_time: 3600\n\n\t\t- name: Instalar Python\n\t\t\tapt: \n\t\t\t\tname: python{{ version }}\n\t\t\t\tstate: present\n\n\n",
	"mysql_tasks" : "\t\t- name: Update cache\n\t\t\tapt:\n\t\t\t\tupdate_cache: yes\n\t\t\t\tcache_valid_time: 3600\n\n\t\t- name: Install MySQL server\n\t\t\tapt:\n\t\t\t\tname: {{ items }}\n\t\t\t\tstate: present\n\t\t\twith_items:\n\t\t\t\t- python-selinux\n\t\t\t\t- mysql-server\n\t\t\t\t- python-mysqldb\n\n\t\t- name: Start and enable service\n\t\t\tservice:\n\t\t\t\tname: mysql\n\t\t\t\tstate: started\n\t\t\t\tenabled: yes\n{% if db_delete_anonymous %}\n\t\t- name: Delete anonymous users\n\t\t\tmysql_user:\n\t\t\t\tname: ''\n\t\t\t\thost_all: yes\n\t\t\t\tstate: absent\n\n{% endif %}{% if db_delete_test %}\t\t- name: Remove test database\n\t\t\tmysql_db:\n\t\t\t\tname: test\n\t\t\t\tstate: absent\n\n{% endif %}{% if db_create_db %}\t\t- name: Ensure MySQL database is present.\n\t\t\tmysql_db:\n\t\t\t\tname: \"{{ db_name }}\"\n\t\t\t\tstate: present\n\n{% endif %}{% if db_create_user %}\t\t- name: Create user\n\t\t\tmysql_user:\n\t\t\t\tname: \"{{ db_username }}\"\n\t\t\t\thost: \"{{ db_host }}\"\n\t\t\t\tpassword: \"{{ db_password }}\"{% if db_create_db %}\n\t\t\t\tpriv: \"{{ db_name }}.*:ALL\"{% endif %}state: present\n{% endif %}\n\n",
	"postgresql_tasks": "\t\t- name: Update cache\n\t\t\tapt:\n\t\t\t\tupdate_cache: yes\n\t\t\t\tcache_valid_time: 3600\n\n\t\t- name: Install PostgreSQL\n\t\t\tapt:\n\t\t\t\tname: {{ item }}\n\t\t\t\tstate: present\n\t\t\twith_items:\n\t\t\t\t- postgresql\n\t\t\t\t- postgresql-contrib\n\t\t\t\t- libpq-dev\n\t\t\t\t- python-psycopg2\n\n\t\t- name: Start and enable service\n\t\t\tservice:\n\t\t\t\tname: postgresql\n\t\t\t\tstate: started\n\t\t\t\tenabled: yes\n\n{% if db_create_db %}\t\t- name: Ensure database is created\n\t\t\tpostgresql_db:\n\t\t\t\tname: {{ db_name }}\n\t\t\t\tstate: present\n\n{% endif %}{% if db_create_user %}\t\t- name: Ensure user has access to the database\n\t\t\tpostgresql_user:\n\t\t\t\tdb: \"{{ db_name }}\"\n\t\t\t\tname: {{ db_username }}\n\t\t\t\tpassword: {{ db_password }}\n\t\t\t\tpriv: \"ALL\"\n\t\t\t\tstate=present{% endif %}\n\n",
	"sqlite_tasks" : "\t\t- name: Update cache\n\t\t\tapt:\n\t\t\t\tupdate_cache: yes\n\t\t\t\tcache_valid_time: 3600\n\n\t\t- name: Install SQLite\n\t\t\tapt:\n\t\t\t\tname: sqlite3\n\t\t\t\tstate: present\n\n\t\t- name: Create sqlite directory.\n\t\t\tfile:\n\t\t\t\tpath: \"{{ db_dir }}\"\n\t\t\t\towner: {{ ansible_user_id }}\n\t\t\t\tgroup: {{ ansible_user_id }}\n\t\t\t\tmode: 0755\n\t\t\t\tstate: directory\n\n{% if db_create_db %}\t\t- name: Create sqlite database\n\t\t\tfile:\n\t\t\t\tname: \"{{ db_dir }}/{{ db_name }}\"\n\t\t\t\towner: {{ '{{' }} ansible_user_id {{ '}}' }}\n\t\t\t\tgroup: {{ '{{' }} ansible_user_id {{ '}}' }}\n\t\t\t\tmode: \"0644\"\n\t\t\t\tstate: file{% endif %}\n\n"
}

